package game;

import java.awt.Color;
import java.awt.Graphics;
import java.util.Random;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class GameScence extends JPanel{
	
	private ImageIcon roadBackgroung;
	private ImageIcon car;
	private ImageIcon myCar;
	private int width ,height ;
	private int x = 520,y = 470;
	private Car car1;
	private CustomRectangel rectangle;
	private CarObstacle enemyCar;
	private ImageIcon carObstacle;
	private  String str = "whiteCar.png" ; 
		
	

	
	public GameScence(int x, int y, int width, int height) {
		this.setBounds(x, y, width,height);
		this.roadBackgroung = new ImageIcon("roadgame.png");
		this.setLayout(null);
		this.car = new ImageIcon("yellowCar.png");
		this.myCar = new ImageIcon("raceCar.png");
		this.setVisible(true);
		this.width = width;
		this.height = height;
		this.car1 = new Car(myCar, this.x, this.y);
		this.rectangle = new CustomRectangel(this.x, this.y, 115, 250, Color.DARK_GRAY);
		this.carObstacle = new ImageIcon(str);
		this.enemyCar = new CarObstacle(carObstacle, 520, -300);
		this.mainGameLoop(); 
		}
	
	public void limits() {
		if(this.rectangle.getX() < 210 || this.car1.getX() < 210) {
			this.rectangle.setX(210);
			this.car1.setX(210);
		}
		
		if(this.rectangle.getX() > 670 || this.car1.getX() > 670){
			this.rectangle.setX(670);
			this.car1.setX(670);
		}
		
		if(this.rectangle.getY() < 0 || this.car1.getY() < 0) {
			this.rectangle.setY(0);
			this.car1.setY(0);
		}
		
		if(this.rectangle.getY() > 490 || this.car1.getY() > 490) {
			this.rectangle.setY(490);
			this.car1.setY(490);
		}
	}
	
	public void carObstacles() {
		Random rnd = new Random(); 
		
	}
	
	public void enemisMainGameLoop() {
		Thread t = new Thread(() -> {
			
		});t.start();
	}
	
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		this.rectangle.paint(g);
		this.roadBackgroung.paintIcon(this, g, 0, 0);
		this.car1.paint(g);
		this.car.paintIcon(this, g, 700, 100);
		this.enemyCar.paint(g);
}
	public void mainGameLoop() {
		Thread thred = new Thread(() ->{
			PlayerMovement playerMovement = new PlayerMovement(this.car1,this.rectangle);
			this.setFocusable(true);
			this.requestFocus();
			this.addKeyListener(playerMovement);
		while(true) {
			try {
				Thread.sleep(1);
				repaint();	
				this.limits();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		});
		thred.start();
	}
}
